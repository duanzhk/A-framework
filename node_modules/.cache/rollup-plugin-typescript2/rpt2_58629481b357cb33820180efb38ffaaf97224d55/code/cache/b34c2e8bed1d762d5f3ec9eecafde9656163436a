{"code":"import { Vec3, view } from \"cc\";\r\n/** 摄像机工具 */\r\nexport class CameraUtil {\r\n    /**\r\n     * 当前世界坐标是否在摄像机显示范围内\r\n     * @param camera    摄像机\r\n     * @param worldPos  坐标\r\n     */\r\n    static isInView(camera, worldPos) {\r\n        var cameraPos = camera.node.getWorldPosition();\r\n        var viewPos = camera.worldToScreen(worldPos);\r\n        var dir = Vec3.normalize(new Vec3(), worldPos.subtract(cameraPos));\r\n        var forward = camera.node.forward;\r\n        var dot = Vec3.dot(forward, dir);\r\n        const viewportRect = view.getViewportRect();\r\n        // 判断物体是否在相机前面\r\n        if (dot > 0\r\n            // 判断物体是否在视窗内\r\n            && (viewPos.x <= viewportRect.width) && (viewPos.x >= 0)\r\n            && (viewPos.y <= viewportRect.height) && (viewPos.y >= 0))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n}\r\n","references":[],"dts":{"name":"/Users/dzk/Documents/git-projects/cocos-modular-flow-framework/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/CameraUtil.d.ts","writeByteOrderMark":false,"text":"import { Camera, Vec3 } from \"cc\";\r\n/** 摄像机工具 */\r\nexport declare class CameraUtil {\r\n    /**\r\n     * 当前世界坐标是否在摄像机显示范围内\r\n     * @param camera    摄像机\r\n     * @param worldPos  坐标\r\n     */\r\n    static isInView(camera: Camera, worldPos: Vec3): boolean;\r\n}\r\n"}}
