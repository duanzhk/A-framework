{"code":"import { ServiceLocator } from \"./core\";\r\n/**\r\n * 对外暴露的全局app对像，用于访问基础能力，为上层业务提供了简洁的访问方式\r\n *\r\n * @class App\r\n */\r\nexport class App {\r\n    static get core() {\r\n        return ServiceLocator.getService('core');\r\n    }\r\n    static get gui() {\r\n        return ServiceLocator.getService('UIManager');\r\n    }\r\n    static get res() {\r\n        return ServiceLocator.getService('ResLoader');\r\n    }\r\n    static get event() {\r\n        return ServiceLocator.getService('EventManager');\r\n    }\r\n}\r\nApp.log = null;\r\nApp.config = null;\r\nApp.http = null;\r\nApp.socket = null;\r\nApp.storage = null;\r\nApp.audio = null;\r\nApp.timer = null;\r\n//例挂载到全局对象\r\nglobalThis.mf = App;\r\n","references":["/Users/dzk/Documents/git-projects/cocos-modular-flow-framework/src/core/index.ts"],"dts":{"name":"/Users/dzk/Documents/git-projects/cocos-modular-flow-framework/node_modules/.cache/rollup-plugin-typescript2/placeholder/App.d.ts","writeByteOrderMark":false,"text":"import { ICore, IUIManager, IEventManager, ICocosResManager } from \"./core\";\r\n/**\r\n * 对外暴露的全局app对像，用于访问基础能力，为上层业务提供了简洁的访问方式\r\n *\r\n * @class App\r\n */\r\nexport declare class App {\r\n    static get core(): ICore;\r\n    static readonly log: any;\r\n    static readonly config: any;\r\n    static get gui(): IUIManager;\r\n    static readonly http: any;\r\n    static readonly socket: any;\r\n    static get res(): ICocosResManager;\r\n    static get event(): IEventManager;\r\n    static readonly storage: any;\r\n    static readonly audio: any;\r\n    static readonly timer: any;\r\n}\r\ndeclare global {\r\n    var mf: typeof App;\r\n}\r\n"}}
